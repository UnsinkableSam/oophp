<?php

namespace sapt17\Dice;

/**
 * Generating histogram data.
 */
class Histogram
{
    /**
     * @var array $serie  The numbers stored in sequence.
     * @var int   $min    The lowest possible number.
     * @var int   $max    The highest possible number.
     */
    private $serie = [];
    private $min;
    private $max;



    /**
     * Get the serie.
     *
     * @return array with the serie.
     */
    public function getSerie()
    {
        foreach ($this->serie as $value) {
            // code...
            print_r($value . ", ");
        }
    }



    /**
     * Return a string with a textual representation of the histogram.
     *
     * @return string representing the histogram.
     */
    public function getAsText()
    {

        for ($i=$this->min; $i <= $this->max; $i++) {
            if (in_array($i, $this->serie)) {
                print_r("\n" . $i . ": ");
                foreach ($this->serie as $value) {
                    if ($value == $i) {
                        print_r("*");
                    }
                }
            }
        }
    }


        /**
     * Inject the object to use as base for the histogram data.
     *
     * @param HistogramInterface $object The object holding the serie.
     *
     * @return void.
     */
    public function injectData(HistogramInterface $object)
    {
        $this->serie = $object->getHistogramSerie();
        $this->min   = $object->getHistogramMin();
        $this->max   = $object->getHistogramMax();
    }


    public function histoReset()
    {
        $this->serie = [];
    }


    public function returnHistoSerie()
    {
        return $this->serie;
    }
}

